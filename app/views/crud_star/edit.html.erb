<div id="content">
	
    <h2>Edit <%= controller.model.model_name.human %></h2>
	
	<%=
		partial = CrudStar::Utility.get_action_help(controller.model, 'edit')
		render(:partial => partial) unless partial.nil?
	%>
	
	<%= form_tag self.send(CrudStar::Utility.path_for_resource(controller.model), @item), :method => :put, :multipart => true %>
	
	
	<% associations = [] %>
	
	<div id="edit_form" class="form">
		
		<%= render :partial => 'crud_star/errors', :locals => {:errors => @item.errors.full_messages} unless @item.errors.empty? %>
	
	    <fieldset>
			
			<%
	          controller.model.edit_attributes[session[:crud_star][:role]].each do |attribute|
	            
	            hierarchy = attribute.split('.')
	
	            association = CrudStar::Utility.get_association(controller.model, attribute)
	
	            if association.nil? or ((association.macro == :belongs_to or association.macro == :has_one) and (!association.klass.respond_to?('edit_associated_attributes')))
	        %>
	              <p<%= CrudStar::Utility.required_field?(controller.model, attribute) ? raw(' class="required"') : nil %>>
                    <%= raw display_field(@item, attribute) %>
					<%=
						partial = CrudStar::Utility.get_field_help(controller.model, attribute)
						render(:partial => partial) unless partial.nil?
					%>
                  </p>
	        <%
	            else
	                associations << attribute
	            end
	          end
	        %>
			
			<%=
				partial = CrudStar::Utility.get_partial(controller.model, 'edit_custom_fields')
				render(:partial => partial) unless partial == 'crud_star/edit_custom_fields'
			%>
			
		</fieldset>
	
        <div><input type="submit" value="Save Changes" class="button" /></div>
    </div>

	</form>

	<%
      associations.each do |attribute|
        
        association = CrudStar::Utility.get_association(controller.model, attribute)

        if association.belongs_to?
    %>
    
    <h3><%= attribute.split('.').last.titleize %></h3>
    
    <table cellpadding="0" cellspacing="0" border="0">
        
        <%
           association.klass.edit_associated_attributes[session[:crud_star][:role]].each do |associated_attribute|
        %>
			<p<%= CrudStar::Utility.required_field?(association.klass, associated_attribute) ? raw(' class="required"') : nil %>>
	            <%= raw display_field(@item, attribute + '.' + associated_attribute) %>
				<%=
					partial = CrudStar::Utility.get_field_help(controller.model, associated_attribute)
					render(:partial => partial) unless partial.nil?
				%>
	        </p>
        <%
          end
        %>
    </table>
    
    <%
        elsif (association.macro == :has_many) or (association.macro == :has_and_belongs_to_many)
    %>
	
		<div id="associated_<%= association.klass.name.underscore %>" class="association">
	       <%= render(:partial => CrudStar::Utility.get_partial(association.klass, 'edit_associated'), :locals => {:association => association, :attribute => attribute}) %>
		</div>
    <%
	    end
      end
    %>
</div>

<div id="sidebar">
    <h5>Resources</h5>
    <ul id="sidebar-nav">
        <li><%= link_to 'Cancel', self.send(CrudStar::Utility.path_for_resource(controller.model), @item, :cancel => 1) %></li>
		
		<% if controller.permissions[session[:crud_star][:role]].include? 'destroy' %>
            <li><%= link_to 'Delete ' + controller.model.model_name.human, self.send(CrudStar::Utility.path_for_resource(controller.model), @item), :method => :delete, :confirm => 'Are you sure you want to delete this ' + controller.model.model_name.human.downcase + '?' %></li>
		<% end %>
		
		<%
          unless controller.sidebar_actions[session[:crud_star][:role]][:edit].nil?
            controller.sidebar_actions[session[:crud_star][:role]][:edit].each do |option|
        %>
          <li><%= link_to option.first, option.last %></li>
        <%
            end
          end
        %>
    </ul>
</div>
