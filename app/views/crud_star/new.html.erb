<div id="content">
	
    <h2>New <%= controller.model.model_name.human %></h2>
	
	<%=
		partial = CrudStar::Utility.get_action_help(controller.model, 'new')
		render(:partial => partial) unless partial.nil?
	%>
	
	<div id="new_form" class="form">
		
		<%= render :partial => 'crud_star/errors', :locals => {:errors => @item.errors.full_messages} unless @item.errors.empty? %>
	
		<%= form_tag self.send(CrudStar::Utility.path_for_resources(controller.model)), :method => 'post', :multipart => true %>    
	 
		    <fieldset>
			
				<%= hidden_field_tag :id, @item_id %>
				
				<%
                  @associations = []
                  
                  controller.model.new_attributes[session[:crud_star][:role]].each do |attribute|
                    
                    # Check if this is an attribute or a belongs_to association.
                    if controller.model.reflections[attribute.to_sym].nil? or controller.model.reflections[attribute.to_sym].macro == :belongs_to
                %>
                  <p<%= CrudStar::Utility.required_field?(controller.model, attribute) ? raw(' class="required"') : nil %>>
                    <%= raw display_field(@item, attribute) %>
					<%=
						partial = CrudStar::Utility.get_field_help(controller.model, attribute)
						render(:partial => partial) unless partial.nil?
					%>
                  </p>
                <%
                    else
                        @associations << attribute
                    end
                  end
                %>
				
				<%=
					partial = CrudStar::Utility.get_partial(controller.model, 'new_custom_fields')
					render(:partial => partial) rescue nil
				%>
			
			</fieldset>
			
			<div>
				<input type="submit" value="Add <%= controller.model.model_name.human %>" class="button" />    
		    </div>
		
	    </form>
	</div>
    
    <%
      @associations.each do |attribute|
        
        association = controller.model.reflections[attribute.to_sym]

        if (association.macro == :has_many) or (association.macro == :has_and_belongs_to_many)
    %>
    
        <div id="associated_<%= association.klass.name.underscore %>" class="association">
           <%= render(:partial => CrudStar::Utility.get_partial(association.klass, 'edit_associated'), :locals => {:association => association, :attribute => attribute}) %>
        </div>
    <%
        end
      end
    %>
</div>

<div id="sidebar">
    <h5>Resources</h5>
    <ul id="sidebar-nav">
		
        <li><%= link_to 'Cancel', self.send(CrudStar::Utility.path_for_resources(controller.model)) %></li>
		
		<%
		  unless controller.sidebar_actions[session[:crud_star][:role]][:new].nil?
            controller.sidebar_actions[session[:crud_star][:role]][:new].each do |option|
        %>
          <li><%= link_to option.first, option.last %></li>
        <%
            end
          end
        %>
    </ul>
</div>